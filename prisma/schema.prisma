generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id                 String    @id @default(uuid())
  email              String    @unique
  nama               String
  nomorhp            String
  password           String
  role               Role      @default(USER)
  resetToken         String?
  resetTokenExpiry   DateTime?
  
  peminjaman         Peminjaman[]
  approvedPeminjaman Peminjaman[] @relation("ApprovedBy")
  
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  @@map("users")
}

model Kategori {
  id        String @id @default(uuid())
  nama      String @unique
  
  barang    Barang[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("kategori")
}

model Merek {
  id        String @id @default(uuid())
  nama      String @unique
  
  barang    Barang[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("merek")
}

model Lokasi {
  id        String @id @default(uuid())
  nama      String @unique
  
  barang    Barang[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("lokasi")
}

enum KondisiBarang {
  BAIK
  RUSAK_RINGAN
  RUSAK_BERAT
  HILANG
}

enum StatusBarang {
  TERSEDIA
  DIPINJAM
  DALAM_PROSES_PEMINJAMAN
}

enum StatusPeminjaman {
  PENDING
  DISETUJUI
  DITOLAK
  DIPINJAM
  DIKEMBALIKAN
}

model Barang {
  id           String        @id @default(uuid())
  kodeBarang   String        @unique
  nama         String
  deskripsi    String
  kondisi      KondisiBarang @default(BAIK)
  status       StatusBarang  @default(TERSEDIA)
  fotoUrl      String?
  qrCodeUrl    String?
  
  kategoriId   String
  kategori     Kategori      @relation(fields: [kategoriId], references: [id])
  
  merekId      String
  merek        Merek         @relation(fields: [merekId], references: [id])
  
  lokasiId     String
  lokasi       Lokasi        @relation(fields: [lokasiId], references: [id])
  
  peminjaman   Peminjaman[]
  
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("barang")
}

model Peminjaman {
  id                  String           @id @default(uuid())
  userId              String
  user                User             @relation(fields: [userId], references: [id])
  
  barangId            String
  barang              Barang           @relation(fields: [barangId], references: [id])
  
  status              StatusPeminjaman @default(PENDING)
  tanggalPengajuan    DateTime         @default(now())
  tanggalDisetujui    DateTime?
  tanggalDipinjam     DateTime?
  tanggalDikembalikan DateTime?
  
  penanggungJawab     String?
  fotoPinjam          String?
  fotoKembali         String?
  catatan             String?
  
  approvedBy          String?
  approvedByUser      User?            @relation("ApprovedBy", fields: [approvedBy], references: [id])
  
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt

  @@map("peminjaman")
}